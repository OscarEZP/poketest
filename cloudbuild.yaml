steps:
  # 1) Renderizar backend/app.yaml con IP privada de Redis + conector VPC
  - name: gcr.io/cloud-builders/gcloud
    id: "Render app.yaml"
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        sed -e "s/REDIS_HOST_PLACEHOLDER/${_REDIS_HOST}/g" \
            -e "s#VPC_CONNECTOR_FULL_PLACEHOLDER#${_VPC_CONNECTOR}#g" \
            app.template.yaml > backend/app.yaml

        echo "===== backend/app.yaml ====="
        cat backend/app.yaml

  - name: node:20
    id: "pin nestjs/axios v2"
    dir: backend
    entrypoint: bash
    args:
      - -lc
      - |
        set -e
        # Reescribe package.json para forzar @nestjs/axios v2
        node -e "const fs=require('fs');const p=JSON.parse(fs.readFileSync('package.json','utf8'));p.dependencies=p.dependencies||{};p.dependencies['@nestjs/axios']='^2';fs.writeFileSync('package.json',JSON.stringify(p,null,2));"
        rm -f package-lock.json
        npm install --no-audit --no-fund

  - name: node:20
    id: "npm ci"
    dir: backend
    entrypoint: npm
    args: ["ci", "--no-audit", "--no-fund"]

  - name: node:20
    id: "npm run build"
    dir: backend
    entrypoint: npm
    args: ["run", "build"]

  - name: gcr.io/cloud-builders/gcloud
    id: "Deploy App Engine"
    args: ["app","deploy","backend/app.yaml","--quiet","--project=${PROJECT_ID}"]

substitutions:
  _REGION: "europe-west1"
  _REDIS_INSTANCE: "app-redis"
  _VPC_CONNECTOR: "projects/maquicontrol-90a19/locations/europe-west1/connectors/app-connector"
  _REDIS_HOST: "10.100.159.43"

options:
  logging: CLOUD_LOGGING_ONLY
